<Gratin type="node">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="3"/>
 <string name="coreHandleStringId" val="PNTrianglesID"/>
 <uint name="coreHandleVersion" val="1"/>
 <string name="nodeStringId-0" val="phongTesselationID"/>
 <uint name="nodeVersion-0" val="1"/>
 <string name="nodeName-0" val="phongTesselation"/>
 <string name="nodePath-0" val="Geometry/"/>
 <string name="nodeDesc-0" val="Phong Tesselation [Boubekeur and Alexa SIGGRAPH ASIA 2008]"/>
 <string name="nodeHelp-0" val="Implementation of the Phong Tesselation paper [Boubekeur and Alexa SIGGRAPH ASIA 2008]. &#xa;Done and provided by Jonathan Dupuy: &#xa;http://onrendering.blogspot.fr/2011/12/tessellation-on-gpu-curved-pn-triangles.html"/>
 <uint name="nodeId-0" val="1"/>
 <uint name="nodeGraphId-0" val="1"/>
 <vector2f name="nodePos-0">
  <float name="0" val="748"/>
  <float name="1" val="0"/>
 </vector2f>
 <int name="nodeInputNameSize-0" val="0"/>
 <int name="nodeOutputNameSize-0" val="1"/>
 <string name="nodeOutputName-0-0" val="tesselate"/>
 <bool name="nodeHasWidget-0" val="1"/>
 <IOData name="node-0">
  <string name="filename" val="../../../data/objs/icosphere.obj"/>
  <IOData name="camera">
   <int name="projType" val="0"/>
   <int name="rotType" val="0"/>
   <vector2i name="viewport">
    <int name="0" val="512"/>
    <int name="1" val="512"/>
   </vector2i>
   <vector3f name="sceneCenter">
    <float name="0" val="0"/>
    <float name="1" val="-8.51495e-09"/>
    <float name="2" val="-0.12152"/>
   </vector3f>
   <float name="sceneRadius" val="1.10521"/>
   <float name="fovy" val="45"/>
   <vector3f name="shift">
    <float name="0" val="0"/>
    <float name="1" val="0"/>
    <float name="2" val="2.55528"/>
   </vector3f>
   <IOData name="trackball">
    <quaternionf name="rotation">
     <float name="0" val="1"/>
     <float name="1" val="0"/>
     <float name="2" val="0"/>
     <float name="3" val="0"/>
    </quaternionf>
    <vector2f name="screenCenter">
     <float name="0" val="256"/>
     <float name="1" val="256"/>
    </vector2f>
    <float name="screenRadius" val="512"/>
   </IOData>
  </IOData>
  <string name="genericGlslVersion" val="410"/>
  <string name="genericNodeName" val="phongTesselation"/>
  <bool name="genericUseVertex" val="1"/>
  <bool name="genericUseTesselation" val="1"/>
  <bool name="genericUseGeometry" val="1"/>
  <bool name="genericUseFragment" val="1"/>
  <int name="genericOutFilter" val="9729"/>
  <int name="genericOutWrap" val="33071"/>
  <bool name="genericUseDepthTest" val="1"/>
  <bool name="genericUseBlending" val="0"/>
  <uint name="genericDepthFunc" val="513"/>
  <uint name="genericBlendSrc" val="1"/>
  <uint name="genericBlendDst" val="0"/>
  <vector4f name="genericBackground">
   <float name="0" val="0"/>
   <float name="1" val="0"/>
   <float name="2" val="0"/>
   <float name="3" val="0"/>
  </vector4f>
  <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform float tessLevel;&#xa;uniform float tessAlpha;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
  <string name="genericVertBody" val="layout(location = 0) out vec3 vtNormal;&#xa;layout(location = 1) out vec2 vtTexcoord;&#xa;&#xa;void main() {&#xa;&#x9;vtNormal  = inNormal;&#xa;&#x9;vtTexcoord = inTexcoord;&#xa;&#x9;gl_Position = vec4(inVertex,1);&#xa;}&#xa;"/>
  <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 tesselate;&#xa;uniform float tessLevel;&#xa;uniform float tessAlpha;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
  <string name="genericFragBody" val="layout(location = 0) in vec3 gfNormal;&#xa;layout(location = 1) in vec2 gfTexcoord;&#xa;layout(location = 2) in vec3 gfFacetNormal;&#xa;layout(location = 3) in vec3 gfTriDistance;&#xa;&#xa;float amplify(float d, float scale, float offset) {&#xa;&#x9;//return 1.;&#xa;&#x9;d = scale * d + offset;&#xa;&#x9;d = clamp(d, 0, 1);&#xa;&#x9;d = 1 - exp2(-2*d*d);&#xa;&#x9;return d;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(gfNormal==vec3(0.)) {&#xa;&#x9;&#x9;tesselate = vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;mat4 mdv    = view*model;&#xa;&#x9;mat4 mvp    = proj*mdv;&#xa;&#xa;&#x9;vec3 n = normalize((mdv*vec4(gfFacetNormal,0.)).xyz);&#xa;&#x9;vec3 l = vec3(0.,0.,1.);&#xa;&#x9;vec3 v = vec3(0.,0.,-1.);&#xa;&#x9;&#xa;&#x9;vec3 c = max(dot(n,l),0.)*vec3(0.8,0.7,0.9)+pow(max(dot(v,reflect(n,l)),0.),30.)*vec3(0.1,0.6,0.6);&#xa;&#x9;float d = min(min(gfTriDistance.x,gfTriDistance.y),gfTriDistance.z);&#xa;&#xa;&#x9;tesselate = vec4(c*amplify(d,40.,-0.5),1);&#xa;}&#xa;"/>
  <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform float tessLevel;&#xa;uniform float tessAlpha;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
  <string name="genericTessCBody" val="// kindly provided by Jonathan Dupuy&#xa;// based on http://onrendering.blogspot.fr/2011/12/tessellation-on-gpu-curved-pn-triangles.html&#xa;&#xa;// Phong tess patch data&#xa;struct PhongPatch&#xa;{&#xa; float termIJ;&#xa; float termJK;&#xa; float termIK;&#xa;};&#xa;  &#xa;layout(vertices=3) out;&#xa; &#xa;layout(location = 0)   in vec3 vtNormal[];&#xa;layout(location = 1)   in vec2 vtTexcoord[];&#xa; &#xa;layout(location=0) out vec3 ttNormal[3];&#xa;layout(location=3) out vec2 ttTexcoord[3];&#xa;layout(location=6) out PhongPatch ttPhongPatch[3];&#xa; &#xa;#define Pi  gl_in[0].gl_Position.xyz&#xa;#define Pj  gl_in[1].gl_Position.xyz&#xa;#define Pk  gl_in[2].gl_Position.xyz&#xa; &#xa;float PIi(int i, vec3 q)&#xa;{&#xa; vec3 q_minus_p = q - gl_in[i].gl_Position.xyz;&#xa; return q[gl_InvocationID] - dot(q_minus_p, vtNormal[i])&#xa;                           * vtNormal[i][gl_InvocationID];&#xa;}&#xa; &#xa;void main()&#xa;{&#xa; // get data&#xa; gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa; ttNormal[gl_InvocationID]   = vtNormal[gl_InvocationID];&#xa; ttTexcoord[gl_InvocationID] = vtTexcoord[gl_InvocationID];&#xa; &#xa; // compute patch data&#xa; ttPhongPatch[gl_InvocationID].termIJ = PIi(0,Pj) + PIi(1,Pi);&#xa; ttPhongPatch[gl_InvocationID].termJK = PIi(1,Pk) + PIi(2,Pj);&#xa; ttPhongPatch[gl_InvocationID].termIK = PIi(2,Pi) + PIi(0,Pk);&#xa; &#xa; // tesselate&#xa; gl_TessLevelOuter[gl_InvocationID] = tessLevel;&#xa; gl_TessLevelInner[0] = tessLevel;&#xa;}&#xa;"/>
  <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform float tessLevel;&#xa;uniform float tessAlpha;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
  <string name="genericTessEBody" val="// kindly provided by Jonathan Dupuy&#xa;&#xa;// Phong tess patch data&#xa;struct PhongPatch&#xa;{&#xa; float termIJ;&#xa; float termJK;&#xa; float termIK;&#xa;};&#xa; &#xa;layout(triangles, equal_spacing, ccw) in;&#xa;//layout(triangles, fractional_odd_spacing, ccw) in;&#xa; &#xa;layout(location=0) in vec3 ttNormal[];&#xa;layout(location=3) in vec2 ttTexcoord[];&#xa;layout(location=6) in PhongPatch ttPhongPatch[];&#xa; &#xa;layout(location = 0) out vec3 tgNormal;&#xa;layout(location = 3) out vec2 tgTexcoord;&#xa;layout(location = 6) out vec3 tgPosition;&#xa; &#xa;#define Pi  gl_in[0].gl_Position.xyz&#xa;#define Pj  gl_in[1].gl_Position.xyz&#xa;#define Pk  gl_in[2].gl_Position.xyz&#xa;#define tc1 gl_TessCoord&#xa; &#xa;void main()&#xa;{&#xa;mat4 mdv    = view*model;&#xa;mat4 mvp    = proj*mdv;&#xa;&#xa; // precompute squared tesscoords&#xa; vec3 tc2 = tc1*tc1;&#xa; &#xa; // compute texcoord and normal&#xa; tgTexcoord = gl_TessCoord[0]*ttTexcoord[0]&#xa;           + gl_TessCoord[1]*ttTexcoord[1]&#xa;           + gl_TessCoord[2]*ttTexcoord[2];&#xa; tgNormal   = gl_TessCoord[0]*ttNormal[0]&#xa;           + gl_TessCoord[1]*ttNormal[1]&#xa;           + gl_TessCoord[2]*ttNormal[2];&#xa; &#xa; // interpolated position&#xa; vec3 barPos = gl_TessCoord[0]*Pi&#xa;             + gl_TessCoord[1]*Pj&#xa;             + gl_TessCoord[2]*Pk;&#xa; &#xa; // build terms&#xa; vec3 termIJ = vec3(ttPhongPatch[0].termIJ,&#xa;                    ttPhongPatch[1].termIJ,&#xa;                    ttPhongPatch[2].termIJ);&#xa; vec3 termJK = vec3(ttPhongPatch[0].termJK,&#xa;                    ttPhongPatch[1].termJK,&#xa;                    ttPhongPatch[2].termJK);&#xa; vec3 termIK = vec3(ttPhongPatch[0].termIK,&#xa;                    ttPhongPatch[1].termIK,&#xa;                    ttPhongPatch[2].termIK);&#xa; &#xa; // phong tesselated pos&#xa; vec3 phongPos   = tc2[0]*Pi&#xa;                 + tc2[1]*Pj&#xa;                 + tc2[2]*Pk&#xa;                 + tc1[0]*tc1[1]*termIJ&#xa;                 + tc1[1]*tc1[2]*termJK&#xa;                 + tc1[2]*tc1[0]*termIK;&#xa; &#xa; // final position&#xa; vec3 finalPos = (1.0-tessAlpha)*barPos + tessAlpha*phongPos;&#xa;&#xa; tgPosition  = finalPos;&#xa; gl_Position   = mvp*vec4(finalPos,1.0);&#xa;}&#xa;"/>
  <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform float tessLevel;&#xa;uniform float tessAlpha;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
  <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;layout(location = 0) in vec3 tgNormal[3];&#xa;layout(location = 3) in vec2 tgTexcoord[3];&#xa;layout(location = 6) in vec3 tgPosition[3];&#xa;&#xa;layout(location = 0) out vec3 gfNormal;&#xa;layout(location = 1) out vec2 gfTexcoord;&#xa;layout(location = 2) out vec3 gfFacetNormal;&#xa;layout(location = 3) out vec3 gfTriDistance;&#xa;&#xa;void main() {&#xa;&#x9;vec3 colors[3] = vec3[](vec3(1.,0.,0.),vec3(0.,1.,0.),vec3(0.,0.,1.));&#xa;&#x9;vec3 D1 = tgPosition[0]-tgPosition[1];&#xa;&#x9;vec3 D2 = tgPosition[0]-tgPosition[2];&#xa;&#x9;vec3 N = normalize(cross(D1,D2));&#xa;&#xa;&#x9;for(int i=0;i&lt;3;++i) { &#xa;&#x9;&#x9;gfNormal = tgNormal[i];&#xa;&#x9;&#x9;gfTexcoord = tgTexcoord[i];&#xa;&#x9;&#x9;gfFacetNormal = N;&#xa;&#x9;&#x9;gfTriDistance = colors[i];&#xa;&#x9;&#x9;gl_Position = gl_in[i].gl_Position;&#xa;&#x9;&#x9;EmitVertex();&#xa;&#x9;}&#xa;&#xa;&#x9;EndPrimitive();&#xa;}&#xa;"/>
  <vector2f name="genericTSize">
   <float name="0" val="0"/>
   <float name="1" val="0"/>
  </vector2f>
  <vector2f name="genericTOffset">
   <float name="0" val="512"/>
   <float name="1" val="512"/>
  </vector2f>
  <bool name="genericNeedMouse" val="0"/>
  <bool name="genericNeedKeyboard" val="0"/>
  <uint name="genericNbWidgets" val="2"/>
  <int name="genericWidgetType-0" val="0"/>
  <int name="genericWidgetView-0" val="1"/>
  <string name="genericWidgetName-0" val="tessLevel"/>
  <bool name="genericWidgetKeyframed-0" val="1"/>
  <int name="genericWidgetType-1" val="0"/>
  <int name="genericWidgetView-1" val="1"/>
  <string name="genericWidgetName-1" val="tessAlpha"/>
  <bool name="genericWidgetKeyframed-1" val="1"/>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint name="nbChildren" val="3"/>
  <IOData name="childWidget-0">
   <bool name="trackballCameraKeyframed" val="1"/>
   <IOData name="trackballCameraAttribCurveQ">
    <quaternionf name="currentVal">
     <float name="0" val="1"/>
     <float name="1" val="0"/>
     <float name="2" val="0"/>
     <float name="3" val="0"/>
    </quaternionf>
    <uint name="nbCurves" val="4"/>
    <IOData name="curve-0">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="1"/>
      </vector2f>
     </IOData>
    </IOData>
    <IOData name="curve-1">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
     </IOData>
    </IOData>
    <IOData name="curve-2">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
     </IOData>
    </IOData>
    <IOData name="curve-3">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <IOData name="trackballCameraAttribCurveS">
    <vector3f name="currentVal">
     <float name="0" val="0"/>
     <float name="1" val="0"/>
     <float name="2" val="3"/>
    </vector3f>
    <uint name="nbCurves" val="3"/>
    <IOData name="curve-0">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
     </IOData>
    </IOData>
    <IOData name="curve-1">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
     </IOData>
    </IOData>
    <IOData name="curve-2">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="2.55528"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <int name="projection" val="0"/>
   <int name="rotation" val="0"/>
   <uint name="nbChildren" val="0"/>
  </IOData>
  <IOData name="childWidget-1">
   <bool name="floatAttribKeyframed" val="1"/>
   <float name="floatAttribMinVal" val="1"/>
   <float name="floatAttribMaxVal" val="50"/>
   <IOData name="floatAttribCurve">
    <float name="currentVal" val="5"/>
    <uint name="nbCurves" val="1"/>
    <IOData name="curve-0">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="5"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <uint name="nbChildren" val="0"/>
  </IOData>
  <IOData name="childWidget-2">
   <bool name="floatAttribKeyframed" val="1"/>
   <float name="floatAttribMinVal" val="0"/>
   <float name="floatAttribMaxVal" val="10"/>
   <IOData name="floatAttribCurve">
    <float name="currentVal" val="0.7"/>
    <uint name="nbCurves" val="1"/>
    <IOData name="curve-0">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="0.7"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <uint name="nbChildren" val="0"/>
  </IOData>
 </IOData>
 <vector2f name="nodeOutputPos-0-0">
  <float name="0" val="56.32"/>
  <float name="1" val="28.16"/>
 </vector2f>
</Gratin>
