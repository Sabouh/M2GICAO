<Gratin type="pipeline">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="3"/>
 <IOData name="mainWindow">
  <IOData name="graphWidget">
   <IOData name="graph">
    <uint name="nbNodes" val="9"/>
    <string name="nodeStringId-0" val="imgLoaderId"/>
    <uint name="nodeVersion-0" val="1"/>
    <string name="nodeName-0" val="imageLoader"/>
    <string name="nodePath-0" val="Imaging/"/>
    <string name="nodeDesc-0" val="Image loader"/>
    <string name="nodeHelp-0" val="Load an image."/>
    <uint name="nodeId-0" val="0"/>
    <uint name="nodeGraphId-0" val="0"/>
    <vector2f name="nodePos-0">
     <float name="0" val="-5967.94"/>
     <float name="1" val="-23556.4"/>
    </vector2f>
    <int name="nodeInputNameSize-0" val="0"/>
    <int name="nodeOutputNameSize-0" val="1"/>
    <string name="nodeOutputName-0-0" val="image"/>
    <string name="nodeStringId-1" val="imageGradientID"/>
    <uint name="nodeVersion-1" val="1"/>
    <string name="nodeName-1" val="imageGradient"/>
    <string name="nodePath-1" val="Analysis/"/>
    <string name="nodeDesc-1" val="Gradient of an image"/>
    <string name="nodeHelp-1" val="Compute the (centered) gradient of an image. &#xa;By default, the color average is used for estimating luminance. &#xa;This might be changed in the &quot;value&quot; function. &#xa;&#xa;Return the gradient in the 2 first output channels. "/>
    <uint name="nodeId-1" val="1"/>
    <uint name="nodeGraphId-1" val="0"/>
    <vector2f name="nodePos-1">
     <float name="0" val="-4080.94"/>
     <float name="1" val="-24785.9"/>
    </vector2f>
    <int name="nodeInputNameSize-1" val="1"/>
    <int name="nodeOutputNameSize-1" val="3"/>
    <string name="nodeInputName-1-0" val="image"/>
    <string name="nodeOutputName-1-0" val="gradientDirichletR"/>
    <string name="nodeOutputName-1-1" val="gradientDirichletG"/>
    <string name="nodeOutputName-1-2" val="gradientDirichletB"/>
    <string name="nodeStringId-2" val="poissonGreyId"/>
    <uint name="nodeVersion-2" val="1"/>
    <string name="nodeName-2" val="poissonDiffusion"/>
    <string name="nodePath-2" val="Imaging/"/>
    <string name="nodeDesc-2" val="Poisson reconstruction with Dirichlet constraints"/>
    <string name="nodeHelp-2" val="Poisson reconstruction&#xa;This node is waiting for (gx,gy,d,use_d)&#xa;where gx, gy is the input gradient and&#xa;d is a Dirichlet constraint&#xa;If use_d>0, Dirichlet constraints d will be taken into account (gx,gy will not be considered)&#xa;If use_d=0, Newmann constraints gx,gy will be taken into account (d will not be considered)&#xa;Outside the image, Newmann constraints are equal to 0&#xa;&#xa;gx and gy can be easily obtained with analysis nodes (e.g. imageGradient)&#xa;"/>
    <uint name="nodeId-2" val="2"/>
    <uint name="nodeGraphId-2" val="0"/>
    <vector2f name="nodePos-2">
     <float name="0" val="-2359.37"/>
     <float name="1" val="-25109.2"/>
    </vector2f>
    <int name="nodeInputNameSize-2" val="1"/>
    <int name="nodeOutputNameSize-2" val="1"/>
    <string name="nodeInputName-2-0" val="gradient"/>
    <string name="nodeOutputName-2-0" val="diffusion"/>
    <string name="nodeStringId-3" val="poissonGreyId"/>
    <uint name="nodeVersion-3" val="1"/>
    <string name="nodeName-3" val="poissonDiffusion"/>
    <string name="nodePath-3" val="Imaging/"/>
    <string name="nodeDesc-3" val="Poisson reconstruction with Dirichlet constraints"/>
    <string name="nodeHelp-3" val="Poisson reconstruction&#xa;This node is waiting for (gx,gy,d,use_d)&#xa;where gx, gy is the input gradient and&#xa;d is a Dirichlet constraint&#xa;If use_d>0, Dirichlet constraints d will be taken into account (gx,gy will not be considered)&#xa;If use_d=0, Newmann constraints gx,gy will be taken into account (d will not be considered)&#xa;Outside the image, Newmann constraints are equal to 0&#xa;&#xa;gx and gy can be easily obtained with analysis nodes (e.g. imageGradient)&#xa;"/>
    <uint name="nodeId-3" val="3"/>
    <uint name="nodeGraphId-3" val="0"/>
    <vector2f name="nodePos-3">
     <float name="0" val="-2359.37"/>
     <float name="1" val="-23565.9"/>
    </vector2f>
    <int name="nodeInputNameSize-3" val="1"/>
    <int name="nodeOutputNameSize-3" val="1"/>
    <string name="nodeInputName-3-0" val="gradient"/>
    <string name="nodeOutputName-3-0" val="diffusion"/>
    <string name="nodeStringId-4" val="poissonGreyId"/>
    <uint name="nodeVersion-4" val="1"/>
    <string name="nodeName-4" val="poissonDiffusion"/>
    <string name="nodePath-4" val="Imaging/"/>
    <string name="nodeDesc-4" val="Poisson reconstruction with Dirichlet constraints"/>
    <string name="nodeHelp-4" val="Poisson reconstruction&#xa;This node is waiting for (gx,gy,d,use_d)&#xa;where gx, gy is the input gradient and&#xa;d is a Dirichlet constraint&#xa;If use_d>0, Dirichlet constraints d will be taken into account (gx,gy will not be considered)&#xa;If use_d=0, Newmann constraints gx,gy will be taken into account (d will not be considered)&#xa;Outside the image, Newmann constraints are equal to 0&#xa;&#xa;gx and gy can be easily obtained with analysis nodes (e.g. imageGradient)&#xa;"/>
    <uint name="nodeId-4" val="4"/>
    <uint name="nodeGraphId-4" val="0"/>
    <vector2f name="nodePos-4">
     <float name="0" val="-2353.88"/>
     <float name="1" val="-22027.3"/>
    </vector2f>
    <int name="nodeInputNameSize-4" val="1"/>
    <int name="nodeOutputNameSize-4" val="1"/>
    <string name="nodeInputName-4-0" val="gradient"/>
    <string name="nodeOutputName-4-0" val="diffusion"/>
    <string name="nodeStringId-5" val="imgGenericId"/>
    <uint name="nodeVersion-5" val="1"/>
    <string name="nodeName-5" val="genericImage"/>
    <string name="nodePath-5" val="Generic/"/>
    <string name="nodeDesc-5" val="Generic node for image processing"/>
    <string name="nodeHelp-5" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-5" val="5"/>
    <uint name="nodeGraphId-5" val="0"/>
    <vector2f name="nodePos-5">
     <float name="0" val="-276.405"/>
     <float name="1" val="-23561.2"/>
    </vector2f>
    <int name="nodeInputNameSize-5" val="3"/>
    <int name="nodeOutputNameSize-5" val="1"/>
    <string name="nodeInputName-5-0" val="R"/>
    <string name="nodeInputName-5-1" val="G"/>
    <string name="nodeInputName-5-2" val="B"/>
    <string name="nodeOutputName-5-0" val="reconstructed"/>
    <string name="nodeStringId-6" val="imgGenericId"/>
    <uint name="nodeVersion-6" val="1"/>
    <string name="nodeName-6" val="genericImage"/>
    <string name="nodePath-6" val="Generic/"/>
    <string name="nodeDesc-6" val="Generic node for image processing"/>
    <string name="nodeHelp-6" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-6" val="6"/>
    <uint name="nodeGraphId-6" val="1"/>
    <vector2f name="nodePos-6">
     <float name="0" val="-4772.13"/>
     <float name="1" val="-27451"/>
    </vector2f>
    <int name="nodeInputNameSize-6" val="0"/>
    <int name="nodeOutputNameSize-6" val="1"/>
    <string name="nodeOutputName-6-0" val="blackWhiteDiscs"/>
    <string name="nodeStringId-7" val="poissonGreyId"/>
    <uint name="nodeVersion-7" val="1"/>
    <string name="nodeName-7" val="poissonDiffusion"/>
    <string name="nodePath-7" val="Imaging/"/>
    <string name="nodeDesc-7" val="Poisson reconstruction with Dirichlet constraints"/>
    <string name="nodeHelp-7" val="Poisson reconstruction&#xa;This node is waiting for (gx,gy,d,use_d)&#xa;where gx, gy is the input gradient and&#xa;d is a Dirichlet constraint&#xa;If use_d>0, Dirichlet constraints d will be taken into account (gx,gy will not be considered)&#xa;If use_d=0, Newmann constraints gx,gy will be taken into account (d will not be considered)&#xa;Outside the image, Newmann constraints are equal to 0&#xa;&#xa;gx and gy can be easily obtained with analysis nodes (e.g. imageGradient)&#xa;"/>
    <uint name="nodeId-7" val="7"/>
    <uint name="nodeGraphId-7" val="1"/>
    <vector2f name="nodePos-7">
     <float name="0" val="-3055"/>
     <float name="1" val="-27454.8"/>
    </vector2f>
    <int name="nodeInputNameSize-7" val="1"/>
    <int name="nodeOutputNameSize-7" val="1"/>
    <string name="nodeInputName-7-0" val="gradient"/>
    <string name="nodeOutputName-7-0" val="diffusion"/>
    <string name="nodeStringId-8" val="imgGenericId"/>
    <uint name="nodeVersion-8" val="1"/>
    <string name="nodeName-8" val="genericImage"/>
    <string name="nodePath-8" val="Generic/"/>
    <string name="nodeDesc-8" val="Generic node for image processing"/>
    <string name="nodeHelp-8" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-8" val="8"/>
    <uint name="nodeGraphId-8" val="1"/>
    <vector2f name="nodePos-8">
     <float name="0" val="-1192.92"/>
     <float name="1" val="-27460.8"/>
    </vector2f>
    <int name="nodeInputNameSize-8" val="1"/>
    <int name="nodeOutputNameSize-8" val="1"/>
    <string name="nodeInputName-8-0" val="L"/>
    <string name="nodeOutputName-8-0" val="laplaceReconstruction"/>
    <uint name="nbConnections-0-1" val="1"/>
    <vector2u name="connection-0-1-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-2" val="0"/>
    <uint name="nbConnections-0-3" val="0"/>
    <uint name="nbConnections-0-4" val="0"/>
    <uint name="nbConnections-0-5" val="0"/>
    <uint name="nbConnections-0-6" val="0"/>
    <uint name="nbConnections-0-7" val="0"/>
    <uint name="nbConnections-0-8" val="0"/>
    <uint name="nbConnections-1-2" val="1"/>
    <vector2u name="connection-1-2-0">
     <uint name="0" val="2"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-3" val="1"/>
    <vector2u name="connection-1-3-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-4" val="1"/>
    <vector2u name="connection-1-4-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-5" val="0"/>
    <uint name="nbConnections-1-6" val="0"/>
    <uint name="nbConnections-1-7" val="0"/>
    <uint name="nbConnections-1-8" val="0"/>
    <uint name="nbConnections-2-3" val="0"/>
    <uint name="nbConnections-2-4" val="0"/>
    <uint name="nbConnections-2-5" val="1"/>
    <vector2u name="connection-2-5-0">
     <uint name="0" val="0"/>
     <uint name="1" val="2"/>
    </vector2u>
    <uint name="nbConnections-2-6" val="0"/>
    <uint name="nbConnections-2-7" val="0"/>
    <uint name="nbConnections-2-8" val="0"/>
    <uint name="nbConnections-3-4" val="0"/>
    <uint name="nbConnections-3-5" val="1"/>
    <vector2u name="connection-3-5-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-3-6" val="0"/>
    <uint name="nbConnections-3-7" val="0"/>
    <uint name="nbConnections-3-8" val="0"/>
    <uint name="nbConnections-4-5" val="1"/>
    <vector2u name="connection-4-5-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-4-6" val="0"/>
    <uint name="nbConnections-4-7" val="0"/>
    <uint name="nbConnections-4-8" val="0"/>
    <uint name="nbConnections-5-6" val="0"/>
    <uint name="nbConnections-5-7" val="0"/>
    <uint name="nbConnections-5-8" val="0"/>
    <uint name="nbConnections-6-7" val="1"/>
    <vector2u name="connection-6-7-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-6-8" val="0"/>
    <uint name="nbConnections-7-8" val="1"/>
    <vector2u name="connection-7-8-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <bool name="nodeHasWidget-0" val="1"/>
    <IOData name="node-0">
     <string name="filename" val="../imgs/flower.jpg"/>
     <vector2i name="size">
      <int name="0" val="1024"/>
      <int name="1" val="1024"/>
     </vector2i>
    </IOData>
    <IOData name="nodeWidget-0">
     <bool name="keepAspectRatio" val="0"/>
     <bool name="keepSize" val="0"/>
    </IOData>
    <vector2f name="nodeOutputPos-0-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-1" val="1"/>
    <IOData name="node-1">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="imageGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradientDirichletR;&#xa;layout(location = 1) out vec4 gradientDirichletG;&#xa;layout(location = 2) out vec4 gradientDirichletB;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;vec3 value(in vec4 c) {&#xa;&#x9;// gradient of what:&#xa;&#x9;return c.xyz;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 si = vec2(textureSize(image,0));&#xa;&#x9;vec2 ps = 1./si;&#xa;&#xa;&#x9;vec3 gx = (value(texture(image,texcoord+vec2(ps.x,0.))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9; value(texture(image,texcoord-vec2(ps.x,0.))))/2.;&#xa;&#x9;vec3 gy = (value(texture(image,texcoord+vec2(0.,ps.y))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9; value(texture(image,texcoord-vec2(0.,ps.y))))/2.;&#xa;&#x9;&#xa;&#x9;vec2 coord = gl_FragCoord.xy;&#xa;&#x9;vec3 cvalue = vec3(0.);&#xa;&#x9;float dirichlet = 0.;&#xa;&#x9;float border = 4.;&#xa;&#xa;&#x9;// add dirichlet constraints around the image&#xa;&#x9;if(&#x9;coord.x&lt; border || coord.x>(si.x-border) ||&#xa;&#x9;&#x9;coord.y&lt; border || coord.y>(si.y-border)) {&#xa;&#x9;&#x9;dirichlet = 1.;&#xa;&#x9;&#x9;cvalue = value(texture(image,texcoord));&#xa;&#x9;}&#xa;&#xa;&#x9;gradientDirichletR = vec4(gx.x,gy.x,cvalue.x,dirichlet);&#xa;&#x9;gradientDirichletG = vec4(gx.y,gy.y,cvalue.y,dirichlet);&#xa;&#x9;gradientDirichletB = vec4(gx.z,gy.z,cvalue.z,dirichlet);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-1">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-1-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-0">
     <float name="0" val="112.64"/>
     <float name="1" val="2534.4"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-1">
     <float name="0" val="112.64"/>
     <float name="1" val="1295.36"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-2">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-2" val="1"/>
    <IOData name="node-2"/>
    <IOData name="nodeWidget-2">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-2-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-3" val="1"/>
    <IOData name="node-3"/>
    <IOData name="nodeWidget-3">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-3-0">
     <float name="0" val="112.64"/>
     <float name="1" val="1295.36"/>
    </vector2f>
    <vector2f name="nodeOutputPos-3-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-4" val="1"/>
    <IOData name="node-4"/>
    <IOData name="nodeWidget-4">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-4-0">
     <float name="0" val="112.64"/>
     <float name="1" val="2534.4"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-5" val="1"/>
    <IOData name="node-5">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D R;&#xa;uniform sampler2D G;&#xa;uniform sampler2D B;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 reconstructed;&#xa;uniform sampler2D R;&#xa;uniform sampler2D G;&#xa;uniform sampler2D B;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;float r = texture(R,texcoord).x;&#xa;&#x9;float g = texture(G,texcoord).x;&#xa;&#x9;float b = texture(B,texcoord).x;&#xa;&#xa;&#x9;reconstructed = vec4(r,g,b,1.);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D R;&#xa;uniform sampler2D G;&#xa;uniform sampler2D B;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D R;&#xa;uniform sampler2D G;&#xa;uniform sampler2D B;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D R;&#xa;uniform sampler2D G;&#xa;uniform sampler2D B;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-5">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-5-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeInputPos-5-1">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeInputPos-5-2">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeOutputPos-5-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-6" val="1"/>
    <IOData name="node-6">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform vec2 mouse;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 blackWhiteDiscs;&#xa;uniform vec2 mouse;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;bool insideDisc(in vec2 pos) {&#xa;&#x9;return distance(pos,texcoord)&lt;0.1;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 pos = mouse/1024.;&#xa;&#xa;&#x9;vec4 col = vec4(0.);&#xa;&#x9;&#xa;&#x9;if(insideDisc(pos)) {&#xa;&#x9;&#x9;col.zw = vec2(1.);&#xa;&#x9;} else if(insideDisc(pos+2.*(vec2(.5)-pos))) {&#xa;&#x9;&#x9;col.w = 1.;&#xa;&#x9;}&#xa;&#xa;&#x9;blackWhiteDiscs = col;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform vec2 mouse;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform vec2 mouse;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform vec2 mouse;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="1024"/>
      <float name="1" val="1024"/>
     </vector2f>
     <bool name="genericNeedMouse" val="1"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-6">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="vector2iAttribKeyframed" val="1"/>
      <vector2i name="vector2iAttribMinVal">
       <int name="0" val="-10000"/>
       <int name="1" val="-10000"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int name="0" val="10000"/>
       <int name="1" val="10000"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int name="0" val="178"/>
        <int name="1" val="159"/>
       </vector2i>
       <uint name="nbCurves" val="2"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="178"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="159"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-6-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-7" val="1"/>
    <IOData name="node-7"/>
    <IOData name="nodeWidget-7">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-7-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeOutputPos-7-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <bool name="nodeHasWidget-8" val="1"/>
    <IOData name="node-8">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D L;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 laplaceReconstruction;&#xa;uniform sampler2D L;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;float l = texture(L,texcoord).x;&#xa;&#xa;&#x9;laplaceReconstruction = vec4(vec3(l),1.);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D L;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D L;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D L;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-8">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-8-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
    <vector2f name="nodeOutputPos-8-0">
     <float name="0" val="112.64"/>
     <float name="1" val="56.32"/>
    </vector2f>
   </IOData>
   <float name="scale" val="11.6468"/>
   <vector2f name="offset">
    <float name="0" val="-2412.81"/>
    <float name="1" val="-24083.9"/>
   </vector2f>
   <IOData name="animation">
    <uint name="firstFrame" val="0"/>
    <uint name="lastFrame" val="99"/>
    <uint name="currentFrame" val="0"/>
    <uint name="fps" val="24"/>
   </IOData>
  </IOData>
  <IOData name="animationWidget">
   <vector2i name="animationWidgetSize">
    <int name="0" val="640"/>
    <int name="1" val="480"/>
   </vector2i>
   <IOData name="timelineWidget"/>
  </IOData>
  <IOData name="nodeListWidget"/>
  <IOData name="interactionWidget">
   <float name="scale" val="3.24984"/>
   <vector2f name="offset">
    <float name="0" val="1091.23"/>
    <float name="1" val="481.01"/>
   </vector2f>
  </IOData>
  <IOData name="nodeInterfaceWidget"/>
 </IOData>
</Gratin>
